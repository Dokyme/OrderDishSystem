登陆:
    req:
        POST /login?username=xxx&password=xxx&captcha=xxx x-www-urlencoded
    res:
        200:
            {
                id:xxx,
                name:xxx,
                account:xxx,
                type:xxx
            }
        401:
            {
                message:用户名不存在/密码不正确/验证码错误
            }

顾客或服务员提交订单：
    req:
        PUT /order Application/json
        {
            table:xxx,
            dishes:[
                dishId,dishId,...
            ]
        }
    res:
        201:提交成功
        403:资源不允许访问

(onload)顾客查看订单详情:
    req:
        GET /order/{orderId} Application/json
    res:
        200:
            {
                id:orderId,
                dishes:[
                    {
                        id:dishId,
                        name:dishName
                        },
                    {
                        id:dishId,
                        name:dishName
                    },...
                ],
                table:tableId,
                time:orderTime,
                state:orderState
            }
        403

(onload)管理员查看订单列表：
    req:    
        GET /order/
    res:
        200:
            [
                {
                    id:orderId,
                    table:tableId,
                    time:orderTime,
                    state:orderState,
                    total:xxx
                },
                {
                    id:orderId,
                    table:tableId,
                    time:orderTime,
                    state:orderState,
                    total:xxx
                }...
            ]
        403

管理员确认结账：
    req:
        POST /checkout/{orderId}
    res:
        204:确认结账成功

管理员经营数据查询:
    req:
        GET /statistics?startTime={startTime}&endTime={endTime}
    res:
        200:
            [
                {
                    startTime:xxx,
                    endTime:xxx,
                    income:xxx,
                    sellNum:xxx,
                    fantai:xxx
                },
                {
                    startTime:xxx,
                    endTime:xxx,
                    income:xxx,
                    sellNum:xxx,
                    fantai:xxx
                },...
            ]
        403


顾客或服务员查看菜单：
    req:
        GET /dish
    res:
        200:
            [
                {
                    id:xxx,
                    name:xxx,
                    price:xxx,
                    type:xxx
                },
                {
                    id:xxx,
                    name:xxx,
                    price:xxx,
                    type:xxx
                },...
            ]
        403

管理员查看菜品详情：
    req:
        GET /dish/{dishId}
    res:
        200:
            {
                id:xxx,
                name:xxx,
                description:xxx,
                picture:xxx,
                price:xxx,
                type:xxx,
                recommend:xxx
            }
        403

管理员修改菜品信息：
    req:
        POST /dish/{dishId}
        {
            name:xxx,
            description:xxx,
            picture:xxx,
            price:xxx,
            type:xxx,
            recommend:xxx
        }
    res:
        204:修改成功

管理员添加菜品：
    req:
        PUT /dish
        {
            name:xxx,
            description:xxx,
            picture:xxx,
            price:xxx,
            type:xxx,
            recommend:xxx
        }
    res:
        201:
            {
                id:xxx,
                name:xxx,
                description:xxx,
                picture:xxx,
                price:xxx,
                type:xxx,
                recommend:xxx
            }
        403

管理员删除菜品：
    req:
        DEL /dish/{dishId}
    res:
        204:删除成功
        403

管理员查看员工概要信息列表：
    req:
        GET /user/
    res:
        200：
            [
                {
                    id:xxx,
                    name:xxx,
                    account:xxx,
                    type:xxx
                },
                {
                    id:xxx,
                    name:xxx,
                    account:xxx,
                    type:xxx
                },...
            ]
        403

管理员查看某个员工详细信息:
    req:
        GET /user/{userId}
    res:
        200:
            {
                id:xxx,
                name:xxx,
                photo:xxx,
                account:xxx,
                password:xxx,
                type:xxx
            }
        403

管理员添加员工:
    req:
        PUT /user
        {
            name:xxx,
            photo:xxx,
            account:xxx,
            password:xxx,
            type:xxx
        }
    res:
        201:
            {
                id:xxx,
                name:xxx,
                photo:xxx,
                account:xxx,
                password:xxx,
                type:xxx
            }
        403

管理员修改员工信息：
    req:
        POST /user/{userId}
        {
            name:xxx,
            photo:xxx,
            account:xxx,
            password:xxx,
            type:xxx            
        }
    res:
        204:修改成功
        403

管理员删除员工信息：
    req:
        DEL /user/{userId}
    res:
        204:删除成功

后厨要求撤销菜品的烹饪:
    req:
        DEL /cooking/{orderInfoId}
    res:
        204
        403

(onload)后厨查看待烹饪菜品列表:
    req:
        GET /cooking
    res:
        200:
            [
                {
                    id:xxx,
                    dish:{
                        id:xxx,
                        name:xxx,
                    },
                    dishstate:xxx
                },
                {
                    id:xxx,
                    dish:{
                        id:xxx,
                        name:xxx,
                    },
                    dishstate:xxx
                },...
            ]
        403

后厨确认某道菜开始烹饪:
    req:
        PUT /cooking/{orderInfoId}
    res:
        204:开始烹饪成功
        403

后厨确认某道菜烹饪完成，要求服务员上菜:
    req:
        PUT /serving/{orderInfoId}
    res:
        204:结束烹饪成功
        403
服务员确认上菜:
    req:
        POST /serving/{orderInfoId}
    res:
        204:确认上菜成功
        403
服务员查看座位情况列表:
    req:
        GET /table
    res:
        200:
            {
                [
                    id:xxx,
                    personalnum:xxx,
                    state:xxx
                ],
                [
                    id:xxx,
                    personalnum:xxx,
                    state:xxx
                ],...
            }
        403

服务员修改座位为已满:
    req:
        POST /table/{tableId}
    res:
        204:修改座位已满成功

服务员修改座位为已空:
    req:
        DEL /table/{tableId}
    res:
        204:修改座位已空成功

顾客提交评价:
    req:
        PUT /evaluation/{orderId}
    res:
        201:评价成功

异步推送消息的内容:
    后厨收到消息，有新菜品要烹饪了：
        {

        }